<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - -
    |   S P R I N G   J S O N   C O N F I G U R A T I O N   |
    \=====================================================-->
    <!-- This will scan packades for spring-annotation -->
    <context:component-scan base-package="com.owlunit.ex"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="crawl.properties"/>
    </bean>


    <!-- - - - - - - - - - -
    |  C A S S A N D R A    |
    \=====================-->
    <bean id="cassandraHostConfigurator" class="me.prettyprint.cassandra.service.CassandraHostConfigurator">
        <constructor-arg value="${cassandra.address}"/>
        <!-- update your hosts file for local development -->
    </bean>
    <bean id="cluster" class="me.prettyprint.cassandra.service.ThriftCluster">
        <constructor-arg value="${cassandra.cluster}"/>
        <constructor-arg ref="cassandraHostConfigurator"/>
    </bean>
    <bean id="keyspace" class="me.prettyprint.hector.api.factory.HFactory" factory-method="createKeyspace">
        <constructor-arg value="${cassandra.keyspace}"/>
        <constructor-arg ref="cluster"/>
    </bean>


    <!-- - - - - - - - - - -
    |  N E O 4 J            |
    \=====================-->
    <!--<bean id="configuration" class="org.neo4j.kernel.EmbeddedGraphDatabase" factory-method="loadConfigurations">-->
        <!--<constructor-arg value="neo4j.properties"/>-->
    <!--</bean>-->

    <bean id="graphDbService" class="org.neo4j.kernel.EmbeddedGraphDatabase" destroy-method="shutdown" scope="singleton">
        <constructor-arg index="0" value="${neo4j.path}"/>
        <!--<constructor-arg index="1" ref="configuration"  />-->
    </bean>


    <!-- - - - - - - - - - -
    |  O W L S   B E A N S  |
    \=====================-->

    <alias name="neoDao" alias="dao"/>

    <bean id="cassandraDao" class="com.owlunit.core.orthodoxal.ii.impl.cassandra.CassandraIiDaoHectorImpl">
        <constructor-arg name="keyspace" ref="keyspace"/>
    </bean>

    <bean id="neoDao" class="com.owlunit.core.orthodoxal.ii.impl.neo4j.NeoIiDaoImpl">
        <constructor-arg ref="graphDbService"/>
    </bean>


    <bean id="plainRecommender" class="com.owlunit.core.orthodoxal.algo.impl.RecommenderPlainImpl">
        <property name="componentsLimit" value="75"/>
        <property name="parentsLimit" value="100"/>
        <property name="weightThreshold" value="2.1"/>
    </bean>

    <bean id="movieService" class="com.owlunit.service.impl.MovieServiceImpl">
        <property name="dao" ref="dao"/>
        <property name="recommender" ref="plainRecommender"/>
        <property name="initialKeywordWeight" value="${imdb.weight.keyword}"/>
        <property name="initialPersonWeight" value="${imdb.weight.person}"/>
        <!-- TODO Anton Chebotaev - set roles properties -->
    </bean>

    <bean id="keywordService" class="com.owlunit.service.impl.KeywordServiceImpl">
        <property name="dao" ref="dao"/>
    </bean>

    <bean id="personService" class="com.owlunit.service.impl.PersonServiceImpl">
        <property name="dao" ref="dao"/>
    </bean>

</beans>